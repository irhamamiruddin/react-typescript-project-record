{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irham\\\\Sandbox\\\\react-project\\\\tutorial-keeptrack\\\\src\\\\projects\\\\ProjectForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Project } from \"./Project\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProjectForm(_ref) {\n  _s();\n\n  let {\n    project: initialProject,\n    onCancel,\n    onSave\n  } = _ref;\n  // State variables\n  const [project, setProject] = useState(initialProject);\n  const [errors, setErrors] = useState({\n    name: \"\",\n    description: \"\",\n    budget: \"\"\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSave(project);\n  };\n\n  const handleChange = event => {\n    const {\n      type,\n      name,\n      value,\n      checked\n    } = event.target; // If type checkbox use checked, else use value\n\n    let updatedValue = type === \"checkbox\" ? checked : value;\n\n    if (type === \"number\") {\n      // cast updatedValue into number\n      updatedValue = Number(updatedValue);\n    }\n\n    const change = {\n      [name]: updatedValue\n    };\n    let updatedProject;\n    setProject(p => {\n      updatedProject = new Project({ ...p,\n        ...change\n      });\n      return updatedProject;\n    });\n  };\n  /* \r\n         html to jsx\r\n      class -> className\r\n      for -> htmlFor\r\n     */\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"input-group vertical\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Project Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"enter name\",\n      value: project.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"description\",\n      children: \"Project Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      placeholder: \"enter description\",\n      value: project.description,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"budget\",\n      children: \"Project Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"budget\",\n      placeholder: \"enter budget\",\n      value: project.budget,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"isActive\",\n      children: \"Active?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: \"isActive\",\n      checked: project.isActive,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary bordered medium\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bordered medium\",\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ProjectForm, \"XFSyJ2M19zdyeollL6ILyeYEWZI=\");\n\n_c = ProjectForm;\nexport default ProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"names":["React","useState","Project","ProjectForm","project","initialProject","onCancel","onSave","setProject","errors","setErrors","name","description","budget","handleSubmit","event","preventDefault","handleChange","type","value","checked","target","updatedValue","Number","change","updatedProject","p","isActive"],"sources":["C:/Users/irham/Sandbox/react-project/tutorial-keeptrack/src/projects/ProjectForm.tsx"],"sourcesContent":["import React, { SyntheticEvent, useState } from \"react\";\r\nimport { Project } from \"./Project\";\r\n\r\ninterface ProjectFormProps {\r\n\tproject: Project;\r\n\tonCancel: () => void;\r\n\tonSave: (project: Project) => void;\r\n}\r\n\r\nfunction ProjectForm({\r\n\tproject: initialProject,\r\n\tonCancel,\r\n\tonSave,\r\n}: ProjectFormProps) {\r\n\t// State variables\r\n\tconst [project, setProject] = useState(initialProject);\r\n\tconst [errors, setErrors] = useState({\r\n\t\tname: \"\",\r\n\t\tdescription: \"\",\r\n\t\tbudget: \"\",\r\n\t});\r\n\r\n\tconst handleSubmit = (event: SyntheticEvent) => {\r\n\t\tevent.preventDefault();\r\n\t\tonSave(project);\r\n\t};\r\n\r\n\tconst handleChange = (event: any) => {\r\n\t\tconst { type, name, value, checked } = event.target;\r\n\r\n\t\t// If type checkbox use checked, else use value\r\n\t\tlet updatedValue = type === \"checkbox\" ? checked : value;\r\n\r\n\t\tif (type === \"number\") {\r\n\t\t\t// cast updatedValue into number\r\n\t\t\tupdatedValue = Number(updatedValue);\r\n\t\t}\r\n\t\tconst change = {\r\n\t\t\t[name]: updatedValue,\r\n\t\t};\r\n\r\n\t\tlet updatedProject: Project;\r\n\r\n\t\tsetProject((p) => {\r\n\t\t\tupdatedProject = new Project({ ...p, ...change });\r\n\t\t\treturn updatedProject;\r\n\t\t});\r\n\t};\r\n\r\n\t/* \r\n        html to jsx\r\n\t    class -> className\r\n\t    for -> htmlFor\r\n    */\r\n\treturn (\r\n\t\t<form className=\"input-group vertical\" onSubmit={handleSubmit}>\r\n\t\t\t<label htmlFor=\"name\">Project Name</label>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tname=\"name\"\r\n\t\t\t\tplaceholder=\"enter name\"\r\n\t\t\t\tvalue={project.name}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor=\"description\">Project Description</label>\r\n\r\n\t\t\t<textarea\r\n\t\t\t\tname=\"description\"\r\n\t\t\t\tplaceholder=\"enter description\"\r\n\t\t\t\tvalue={project.description}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t></textarea>\r\n\t\t\t<label htmlFor=\"budget\">Project Budget</label>\r\n\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tname=\"budget\"\r\n\t\t\t\tplaceholder=\"enter budget\"\r\n\t\t\t\tvalue={project.budget}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t/>\r\n\t\t\t<label htmlFor=\"isActive\">Active?</label>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tname=\"isActive\"\r\n\t\t\t\tchecked={project.isActive}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t/>\r\n\r\n\t\t\t<div className=\"input-group\">\r\n\t\t\t\t<button className=\"primary bordered medium\">Save</button>\r\n\t\t\t\t<span></span>\r\n\t\t\t\t<button type=\"button\" className=\"bordered medium\" onClick={onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default ProjectForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}