{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irham\\\\Sandbox\\\\react-project\\\\tutorial-keeptrack\\\\src\\\\projects\\\\ProjectsPage.tsx\",\n    _s = $RefreshSig$();\n\n/*  \r\n    import React from 'react';\r\n    is not required in the latest version(s) \r\n    of React because it uses a new JSX Transform. \r\n    \r\n    With the new JSX Transform, the import statement is only \r\n    needed at the entry point of the application which is \r\n    src\\index.js\r\n*/\nimport React, { useState } from \"react\";\nimport { MOCK_PROJECTS } from \"./MockProjects\";\nimport ProjectList from \"./ProjectList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProjectsPage() {\n  _s();\n\n  const [projects, setProjects] = useState(MOCK_PROJECTS);\n\n  const saveProject = project => {\n    // console.log(\"Saving Project: \", project);\n    let updatedProjects = projects.map(p => {\n      return p.id === project.id ? project : p;\n    });\n    setProjects(updatedProjects);\n  };\n\n  return (\n    /*#__PURE__*/\n    // React Fragment <></> to return multiple root element\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: projects,\n        onSave: saveProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(ProjectsPage, \"ht0HbwtThoMXlW6TBW43oBsrV0w=\");\n\n_c = ProjectsPage;\nexport default ProjectsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","useState","MOCK_PROJECTS","ProjectList","ProjectsPage","projects","setProjects","saveProject","project","updatedProjects","map","p","id"],"sources":["C:/Users/irham/Sandbox/react-project/tutorial-keeptrack/src/projects/ProjectsPage.tsx"],"sourcesContent":["/*  \r\n    import React from 'react';\r\n    is not required in the latest version(s) \r\n    of React because it uses a new JSX Transform. \r\n    \r\n    With the new JSX Transform, the import statement is only \r\n    needed at the entry point of the application which is \r\n    src\\index.js\r\n*/\r\nimport { render } from \"@testing-library/react\";\r\nimport React, { useState } from \"react\";\r\nimport { MOCK_PROJECTS } from \"./MockProjects\";\r\nimport { Project } from \"./Project\";\r\nimport ProjectList from \"./ProjectList\";\r\n\r\nfunction ProjectsPage() {\r\n\tconst [projects, setProjects] = useState<Project[]>(MOCK_PROJECTS);\r\n\r\n\tconst saveProject = (project: Project) => {\r\n\t\t// console.log(\"Saving Project: \", project);\r\n\t\tlet updatedProjects = projects.map((p: Project) => {\r\n\t\t\treturn p.id === project.id ? project : p;\r\n\t\t});\r\n\t\tsetProjects(updatedProjects);\r\n\t};\r\n\r\n\treturn (\r\n\t\t// React Fragment <></> to return multiple root element\r\n\t\t<>\r\n\t\t\t<h1>Projects</h1>\r\n\r\n\t\t\t{/* Pass the MOCK_PROJECTS array to props */}\r\n\t\t\t<ProjectList projects={projects} onSave={saveProject} />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ProjectsPage;\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACvB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAYC,aAAZ,CAAxC;;EAEA,MAAMK,WAAW,GAAIC,OAAD,IAAsB;IACzC;IACA,IAAIC,eAAe,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,CAAD,IAAgB;MAClD,OAAOA,CAAC,CAACC,EAAF,KAASJ,OAAO,CAACI,EAAjB,GAAsBJ,OAAtB,GAAgCG,CAAvC;IACA,CAFqB,CAAtB;IAGAL,WAAW,CAACG,eAAD,CAAX;EACA,CAND;;EAQA;IAAA;IACC;IACA;MAAA,wBACC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADD,eAIC,QAAC,WAAD;QAAa,QAAQ,EAAEJ,QAAvB;QAAiC,MAAM,EAAEE;MAAzC;QAAA;QAAA;QAAA;MAAA,QAJD;IAAA;EAFD;AASA;;GApBQH,Y;;KAAAA,Y;AAsBT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}