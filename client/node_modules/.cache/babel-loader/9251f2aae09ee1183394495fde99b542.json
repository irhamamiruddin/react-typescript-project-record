{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irham\\\\Sandbox\\\\react-project\\\\tutorial-keeptrack\\\\src\\\\projects\\\\ProjectsPage.tsx\",\n    _s = $RefreshSig$();\n\n/*  \r\n    import React from 'react';\r\n    is not required in the latest version(s) \r\n    of React because it uses a new JSX Transform. \r\n    \r\n    With the new JSX Transform, the import statement is only \r\n    needed at the entry point of the application which is \r\n    src\\index.js\r\n*/\nimport React, { useEffect, useState } from \"react\";\nimport { MOCK_PROJECTS } from \"./MockProjects\";\nimport { Project } from \"./Project\";\nimport { projectAPI } from \"./projectAPI\";\nimport ProjectList from \"./ProjectList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ProjectsPage() {\n  _s();\n\n  const [projects, setProjects] = useState(MOCK_PROJECTS); // const [projects, setProjects] = useState<Project[]>([]);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(undefined);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handleMoreClick = () => {\n    setCurrentPage(currentPage => currentPage + 1);\n  }; // Loading data into API\n\n\n  useEffect(() => {\n    async function loadProjects() {\n      setLoading(true);\n\n      try {\n        const data = await projectAPI.get(currentPage);\n        setError(\"\");\n\n        if (currentPage === 1) {\n          setProjects(data);\n        } else {\n          setProjects(projects => [...projects, ...data]);\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          setError(e.message);\n        }\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadProjects();\n  }, [currentPage]);\n\n  const saveProject = project => {\n    // console.log(\"Saving Project: \", project);\n    projectAPI.put(project).then(updatedProject => {\n      let updatedProjects = projects.map(p => {\n        return p.id === project.id ? new Project(updatedProject) : p;\n      });\n      setProjects(updatedProjects);\n    }).catch(e => {\n      if (e instanceof Error) {\n        setError(e.message);\n      }\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // React Fragment <></> to return multiple root element\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card large error\",\n          children: /*#__PURE__*/_jsxDEV(\"section\", {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icon-alert inverse \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 9\n              }, this), error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ProjectList, {\n        projects: projects,\n        onSave: saveProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-18\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group fluid\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button default\",\n              onClick: handleMoreClick,\n              children: \"More...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(ProjectsPage, \"+Q1Uq3Z/tnvDkQTXt2j+PgAVjbw=\");\n\n_c = ProjectsPage;\nexport default ProjectsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsPage\");","map":{"version":3,"names":["React","useEffect","useState","MOCK_PROJECTS","Project","projectAPI","ProjectList","ProjectsPage","projects","setProjects","loading","setLoading","error","setError","undefined","currentPage","setCurrentPage","handleMoreClick","loadProjects","data","get","e","Error","message","saveProject","project","put","then","updatedProject","updatedProjects","map","p","id","catch"],"sources":["C:/Users/irham/Sandbox/react-project/tutorial-keeptrack/src/projects/ProjectsPage.tsx"],"sourcesContent":["/*  \r\n    import React from 'react';\r\n    is not required in the latest version(s) \r\n    of React because it uses a new JSX Transform. \r\n    \r\n    With the new JSX Transform, the import statement is only \r\n    needed at the entry point of the application which is \r\n    src\\index.js\r\n*/\r\nimport { render } from \"@testing-library/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { MOCK_PROJECTS } from \"./MockProjects\";\r\nimport { Project } from \"./Project\";\r\nimport { projectAPI } from \"./projectAPI\";\r\nimport ProjectList from \"./ProjectList\";\r\n\r\nfunction ProjectsPage() {\r\n\tconst [projects, setProjects] = useState<Project[]>(MOCK_PROJECTS);\r\n\t// const [projects, setProjects] = useState<Project[]>([]);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState<string | undefined>(undefined);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\r\n\tconst handleMoreClick = () => {\r\n\t\tsetCurrentPage((currentPage) => currentPage + 1);\r\n\t};\r\n\r\n\t// Loading data into API\r\n\tuseEffect(() => {\r\n\t\tasync function loadProjects() {\r\n\t\t\tsetLoading(true);\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await projectAPI.get(currentPage);\r\n\t\t\t\tsetError(\"\");\r\n\t\t\t\tif (currentPage === 1) {\r\n\t\t\t\t\tsetProjects(data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetProjects((projects) => [...projects, ...data]);\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (e instanceof Error) {\r\n\t\t\t\t\tsetError(e.message);\r\n\t\t\t\t}\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\tloadProjects();\r\n\t}, [currentPage]);\r\n\r\n\tconst saveProject = (project: Project) => {\r\n\t\t// console.log(\"Saving Project: \", project);\r\n\t\tprojectAPI\r\n\t\t\t.put(project)\r\n\t\t\t.then((updatedProject) => {\r\n\t\t\t\tlet updatedProjects = projects.map((p: Project) => {\r\n\t\t\t\t\treturn p.id === project.id ? new Project(updatedProject) : p;\r\n\t\t\t\t});\r\n\t\t\t\tsetProjects(updatedProjects);\r\n\t\t\t})\r\n\t\t\t.catch((e) => {\r\n\t\t\t\tif (e instanceof Error) {\r\n\t\t\t\t\tsetError(e.message);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t// React Fragment <></> to return multiple root element\r\n\t\t<>\r\n\t\t\t<h1>Projects</h1>\r\n\t\t\t{error && (\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"card large error\">\r\n\t\t\t\t\t\t<section>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t<span className=\"icon-alert inverse \"></span>\r\n\t\t\t\t\t\t\t\t{error}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</section>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Pass the MOCK_PROJECTS array to props */}\r\n\t\t\t<ProjectList projects={projects} onSave={saveProject} />\r\n\t\t\t{!loading && !error && (\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-sm-18\">\r\n\t\t\t\t\t\t<div className=\"button-group fluid\">\r\n\t\t\t\t\t\t\t<button className=\"button default\" onClick={handleMoreClick}>\r\n\t\t\t\t\t\t\t\tMore...\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{loading && (\r\n\t\t\t\t<div className=\"center-page\">\r\n\t\t\t\t\t<span className=\"spinner primary\"></span>\r\n\t\t\t\t\t<p>Loading...</p>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ProjectsPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}